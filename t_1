repeat
	wait(1)
until game:IsLoaded()

local Raw_GetKey_Authguard = "https://cdn.authguard.org/virtual-file/875272f41bf54219859c76b2a317733a"
local EXPECTED_URL = "https://raw.githubusercontent.com/jf5ndke8i7d4/Jenop789/refs/heads/main/t_1"

getgenv()._SomtankValidated = {
	ok = false,
	hash = nil
}
local validateKeySystem = newcclosure(function()
	if not getgenv().SOMTANK_KEY then
		return warn("Unauthorized! Must pass key system first.")
	end
	local info = rawget(getgenv(), "_SomtankMarker")
	if type(info) ~= "table"
		or info.url ~= "Somtank_DiamondFarm"
		or typeof(info.token) ~= "Instance"
		or info.sourceUrl ~= EXPECTED_URL
		or not info.hash
		or not info.salt then
		return warn("Invalid loader info or unauthorized source!")
	end
	local ok, source = pcall(function()
		return game:HttpGet(EXPECTED_URL)
	end)
	if not ok or not source then
		return warn("Failed to fetch script source")
	end
	local currentHash = crypt.hash(source .. info.salt, "sha384")
	if currentHash ~= info.hash then
		return warn("Script hash mismatch (salted), possible tampering")
	end
	getgenv()._SomtankValidated.ok = true
	getgenv()._SomtankValidated.hash = info.hash
	pcall(function()
		getgenv()._SomtankMarker = nil
		getgenv().SOMTANK_KEY = false
	end)
end)
validateKeySystem()
local function prettyAssert(cond, msg)
	if cond then return true end
	xpcall(function()
		error(msg, 0) 
	end, function(err)
		warn("‚ùå Assertion Failed!")
		warn("Message: " .. tostring(err))
	end)
	return false
end
if not prettyAssert(getgenv()._SomtankValidated.ok, "Unauthorized! Must run through KeySystem first.") then
	return
end

if getgenv().RunScript and getgenv().RunScript == true then	return end
getgenv().RunScript = true

repeat wait(0.1) until game.Players

l = game.Players.LocalPlayer;
plrGUI = l.PlayerGui;
HttpService = game:GetService("HttpService");

task.spawn(function()
	while true do
		pcall(function()
			game.Players.LocalPlayer.GameplayPaused = false
		end)
		task.wait()
	end
end)

Start_Farming_Time = tonumber(os.time())
if getgenv().Info_Script then
	if getgenv().Info_Script.Start_Farming then
		Start_Farming_Time = getgenv().Info_Script.Start_Farming
	else
		Start_Farming_Time = tonumber(os.time())
	end
end
Info_Script = {
	Start_Farming = Start_Farming_Time
}
UserInfo = HttpService:JSONEncode(Info_Script)
DC_Webhook = nil
if getgenv().Webhook then
	DC_Webhook = getgenv().Webhook
else
	DC_Webhook = ""
end

queue_on_teleport([[
 local HttpService = game:GetService("HttpService")
 local Uid_In_Server = ']] .. UserInfo .. [['
 getgenv().Webhook = ']] .. DC_Webhook .. [['
 getgenv().Info_Script = HttpService:JSONDecode(Uid_In_Server)
 loadstring(game:HttpGet(']] .. GetKey_Authguard .. [['))()
]])
local function HopServer(player)
	game:GetService("TeleportService"):Teleport(79546208627805, game.Players.LocalPlayer)
end
if tonumber(game.PlaceId) == tonumber(79546208627805) then
	EntryScreen = plrGUI:WaitForChild("Interface"):WaitForChild("EntryScreen")
	LobbyCreate = plrGUI:WaitForChild("Interface"):WaitForChild("LobbyCreate")
	CloseButton = plrGUI:WaitForChild("Interface"):WaitForChild("LobbyCreate"):WaitForChild("CloseButton")
	Exit_Button = plrGUI:WaitForChild("TeleporterAssets"):WaitForChild("TextButton")
		
	local function createLobby(size)
		local chosenFunc
		for i, func in ipairs(getgc(true)) do
			if type(func) == "function" and islclosure(func) then
				for _, c in ipairs(debug.getconstants(func)) do
					if tostring(c) == "Chosen" then
						chosenFunc = func
					end
				end
			end
		end
		debug.setupvalue(chosenFunc, 2, size)
		local selfTable = debug.getupvalue(chosenFunc, 1)
		local ok, res = pcall(chosenFunc, selfTable)
	end
		
	ch = l.Character;
	hmn = ch:FindFirstChild("HumanoidRootPart")
	GetRoom = false
	EntryScreen.Visible = false
	
	CloseButton.Activated:Connect(function()
		GetRoom = false
	end)
	Exit_Button.Activated:Connect(function()
		GetRoom = false
	end)
	
	for i=1,10 do
		for i2=1,3 do
			if workspace:FindFirstChild("Teleporter"..i2) and not GetRoom then
				Teleporter_Model = workspace:FindFirstChild("Teleporter"..i)
				BillboardHolder = Teleporter_Model:WaitForChild("BillboardHolder"):WaitForChild("BillboardGui"):WaitForChild("Players")
				for _,item in ipairs(Teleporter_Model:GetChildren()) do
					if BillboardHolder.Text == "0/5" and not GetRoom then
						if item:IsA("BasePart") and item.Name == "EnterPart" then
							firetouchinterest(hmn, item, 0)
							task.wait(0.001)
							firetouchinterest(hmn, item, 1)
						end
					end
					wait(0.1)
					if LobbyCreate.Visible == true then
						print("GetRoom = true")
						GetRoom = true
						createLobby(1)
						wait(10)
					end
				end
			end
		end
		wait(3)
	end
	HopServer(l)
	print("teleport Old Server")
	wait(10)
end
Joind_OldSer_Stats = 0;
if getgenv().Info_User then
	Rejoid_Old_Server = false
	if getgenv().Info_User.Uid_In_Old_Server then
		Foud_Old_Player_Count = 0
		for _,v in ipairs(getgenv().Info_User.Uid_In_Old_Server) do
			for _,v2 in ipairs(game.Players:GetChildren()) do
				if v2.UserId == v then
					Foud_Old_Player_Count = Foud_Old_Player_Count + 1
				end
			end
		end
		if Foud_Old_Player_Count > ((#game.Players:GetChildren() - 1) / 2) then
			task.spawn(function()
				Rejoid_Old_Server = true
				wait(0.5)
				HopServer(l)
				print("teleport Old Server")
				wait(10)
			end)
		end
	end
end

task.spawn(function()
	pcall(function()
		Uid_In_Server = {}
		for _,v in ipairs(game.Players:GetChildren()) do
			if v ~= l then
				table.insert(Uid_In_Server, v.UserId);
			end
		end
		Info_User = {
			Uid_In_Old_Server = Uid_In_Server
		}
		jsonData2 = HttpService:JSONEncode(Info_User)
		queue_on_teleport([[
      local HttpService = game:GetService("HttpService")
      local Uid_In_Server = ']] .. jsonData2 .. [['
      getgenv().Info_User = HttpService:JSONDecode(Uid_In_Server)
    ]])
	end)
end)

local function TextLabelSet(TextLabel_Frame, X_Posi, Text_Color, Text, Istitle)
	if Istitle then
		Istitle = UDim2.new(0.81,0,0.15,0)
	else
		Istitle = UDim2.new(0.81,0,0.1,0)
	end
	TextLabel_Frame.Size = Istitle
	TextLabel_Frame.Position = UDim2.new(0.1,0,X_Posi,0)
	TextLabel_Frame.BackgroundTransparency = 1
	TextLabel_Frame.TextScaled = true
	TextLabel_Frame.TextColor3 = Text_Color
	TextLabel_Frame.RichText = true
	TextLabel_Frame.Text = Text
	TextLabel_Frame.Font = Enum.Font.Highway
end

pcall(function()

	ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
	Dark_Frame = Instance.new("Frame", ScreenGui)

	ScreenGui.Name = string.gsub(string.char(math.random(65,90),math.random(65,90))..math.random(1000,9999),"%s","");
	ScreenGui.Enabled = true;-- ‡πÄ‡∏õ‡∏¥‡∏î / ‡∏õ‡∏¥‡∏î *

	Dark_Frame.Size = UDim2.new(2,0,2,0);
	Dark_Frame.Position = UDim2.new(-0.5,0,-0.5,0);
	Dark_Frame.BackgroundColor3 = Color3.new(0.0235294, 0.0235294, 0.0235294);
	Dark_Frame.BackgroundTransparency = 0.3
	
	Credit = Instance.new("TextLabel", ScreenGui)
	Credit.Size = UDim2.new(0.1,0,0.05,0)
	Credit.Position = UDim2.new(0.05,0,0.1,0)
	Credit.BackgroundTransparency = 1
	Credit.TextScaled = true
	Credit.TextColor3 = Color3.new(1, 1, 1)
	Credit.Text = "Lobby Bypass by | DaytoDay2044"
	Credit.Font = Enum.Font.Highway

	Title = Instance.new("TextLabel", ScreenGui)
	TextLabelSet(Title, 0.1, Color3.new(0.501961, 0.25098, 1), "Somtank Script", true)

	Player_name = Instance.new("TextLabel", ScreenGui)
	TextLabelSet(Player_name, 0.3, Color3.new(1, 1, 1), l.DisplayName)

	Diamon_Count = Instance.new("TextLabel", ScreenGui)
	TextLabelSet(Diamon_Count, 0.5, Color3.new(1, 1, 1), "")

	Time_Farm = Instance.new("TextLabel", ScreenGui)
	TextLabelSet(Time_Farm, 0.7, Color3.new(1, 0.890196, 0.501961), "")

	task.spawn(function()
		local function formatTime(seconds)
			local hours = math.floor(seconds / 3600)
			local minutes = math.floor((seconds % 3600) / 60)
			local secs = seconds % 60
			return hours, minutes, secs
		end
		while true do
			if getgenv().Info_Script then
				if getgenv().Info_Script.Start_Farming then
					pcall(function()
						Diamon_Value = tonumber(plrGUI:WaitForChild("Interface"):WaitForChild("DiamondCount"):FindFirstChild("Count").Text)
						if Diamon_Value == 0 then
							Diamon_Value = "-"
						end
						diff = tonumber(os.time()) - tonumber(getgenv().Info_Script.Start_Farming)
						h, m, s = formatTime(diff)
						Time_Farm.Text = "‚åõ "..h.." ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á "..m.." ‡∏ô‡∏≤‡∏ó‡∏µ "..s.." ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ"
						Diamon_Count.Text = "‡πÄ‡∏û‡∏ä‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ "..Diamon_Value.." üíé"
					end)
				end
			end
			wait(0.3)
		end
	end)

end)

repeat_stuc_count = 0;

repeat
	wait(0.1)
	if repeat_stuc_count < 3 then
		repeat_stuc_count = repeat_stuc_count + 0.1
	else
		wait(1)
		game:GetService("TeleportService"):Teleport(126509999114328, game.Players.LocalPlayer)
		print("teleport 1")
		wait(10)
	end
until game.Players.LocalPlayer.Character
TimeWaitLoadGame = 0;
repeat
	wait(0.1)
	TimeWaitLoadGame = TimeWaitLoadGame + 0.1
	if TimeWaitLoadGame > 3 or l:GetAttribute("HasDied") == true then
		wait(1)
		game:GetService("TeleportService"):Teleport(126509999114328)
		print("teleport 2")
		wait(10)
	end
until l.Character and l.Character:FindFirstChild("HumanoidRootPart") and l.Character:FindFirstChild("Humanoid") 

ch = l.Character;
hu = ch:FindFirstChild("Humanoid");
hmn = ch:FindFirstChild("HumanoidRootPart");
cam = workspace.CurrentCamera;

task.spawn(function()
	OutTick, LastPosition, Stuck_Count = 0, hmn.Position, 0
	while wait(1) do
		OutTick = OutTick + 1
		Dis_Pl = (LastPosition - hmn.Position).Magnitude
		if Dis_Pl < 5 then
			Stuck_Count = Stuck_Count + 1
		end
		if OutTick >= 25 or Stuck_Count > 2 or l:GetAttribute("HasDied") == true then
			wait(1)
			game:GetService("TeleportService"):Teleport(126509999114328)
			print("teleport 3")
			wait(10)
		end
		LastPosition = hmn.Position
	end
end)

local function sendWebhook(Diamon_Count)
	embed = {
		["title"] = "üìä ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏û‡∏ä‡∏£",
		["description"] = 
			"**‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô:** `" .. l.Name .. "`\n" ..
			"**‡πÄ‡∏û‡∏ä‡∏£:** `" .. Diamon_Count .. "üíé`",
		["color"] = tonumber(0xCBA0E3),
		["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
	}
	data = {
		["username"] = "Somtank ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô",
		["avatar_url"] = "https://media.discordapp.net/attachments/1367059030274609183/1412413636131033159/IconNew.jpg?ex=68b83434&is=68b6e2b4&hm=f2413ea4327ecfbb8c9357ac2f447bac0f97dc11bb1ce65e11241af520348711&=&format=webp&width=656&height=656",
		["embeds"] = {embed}
	}
	jsonData_POST = HttpService:JSONEncode(data)
	if http_request then
		http_request({
			Url = getgenv().Webhook or nil,
			Method = "POST",
			Headers = {["Content-Type"] = "application/json"},
			Body = jsonData_POST
		})
	end
end

ReplicatedStorage = game:GetService("ReplicatedStorage")
RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents")
RequestStartDraggingItem = RemoteEvents:FindFirstChild("RequestStartDraggingItem")
RequestTakeDiamonds = RemoteEvents:FindFirstChild("RequestTakeDiamonds")
StopDraggingItem = RemoteEvents:FindFirstChild("StopDraggingItem")

hu.HipHeight = 16

local function matchesAllowedKeyword(value, allowedKeywords)
	value = value:lower()
	for _, keyword in ipairs(allowedKeywords) do
		if string.find(value, keyword:lower()) then
			return true
		end
	end
	return false
end
for _,v in ipairs(workspace.Items:GetChildren()) do
	if matchesAllowedKeyword(v.Name, {"Chest"}) then
		pcall(function()
			hmn.CFrame = CFrame.new(v.PrimaryPart.Position) * CFrame.new(0,5,0)
			wait(0.07)
			fireproximityprompt(v.PrimaryPart.ProximityAttachment.ProximityInteraction)
			wait(0.07)
		end)
	end
end
for _, Model in ipairs(workspace.Items:GetChildren()) do
	if Model.Name == "Diamond" then
		pcall(function()
			if Model.PrimaryPart then
				wait(0.07)
				hmn.CFrame = Model.PrimaryPart.CFrame
				wait(0.07)
				RequestStartDraggingItem:FireServer(Model)
				wait(0.07)
				RequestTakeDiamonds:FireServer(Model)
				wait(0.07)
				StopDraggingItem:FireServer(Model)
			end
		end)
	end
end
wait(1)
game:GetService("TeleportService"):Teleport(126509999114328)
End_Diamon_Value = tonumber(plrGUI:WaitForChild("Interface"):WaitForChild("DiamondCount"):FindFirstChild("Count").Text) or 0
if getgenv().Diamon_Count_Value then
	if End_Diamon_Value > 0 and End_Diamon_Value > tonumber(getgenv().Diamon_Count_Value) then
		sendWebhook(End_Diamon_Value)
	end
end
queue_on_teleport([[getgenv().Diamon_Count_Value = ']] .. End_Diamon_Value .. [[']])
print("teleport 4")
wait(10)
