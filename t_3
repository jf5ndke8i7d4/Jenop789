repeat
	wait(1)
until game:IsLoaded()

if getgenv().RunScript == true then	return end
getgenv().RunScript = true

repeat wait(0.1) until game.Players

l = game.Players.LocalPlayer;
plrGUI = l.PlayerGui;
HttpService = game:GetService("HttpService");

task.spawn(function()
	while true do
		pcall(function()
			game.Players.LocalPlayer.GameplayPaused = false
		end)
		task.wait()
	end
end)

Start_Farming_Time = tonumber(os.time())
if getgenv().Info_Script then
	if getgenv().Info_Script.Start_Farming then
		Start_Farming_Time = getgenv().Info_Script.Start_Farming
	else
		Start_Farming_Time = tonumber(os.time())
	end
end
Info_Script = {
	Start_Farming = Start_Farming_Time
}
UserInfo = HttpService:JSONEncode(Info_Script)
DC_Webhook = nil
if getgenv().Webhook then
	DC_Webhook = getgenv().Webhook
else
	DC_Webhook = ""
end

queue_on_teleport([[
 local HttpService = game:GetService("HttpService")
 local Uid_In_Server = ']] .. UserInfo .. [['
 getgenv().Webhook = ']] .. DC_Webhook .. [['
 getgenv().Info_Script = HttpService:JSONDecode(Uid_In_Server)
 loadstring(game:HttpGet("https://raw.githubusercontent.com/jf5ndke8i7d4/Jenop789/refs/heads/main/t_3"))()
]])
if tonumber(game.PlaceId) == tonumber(79546208627805) then
	--game:GetService("Players").LocalPlayer.PlayerGui.Interface.EntryScreen
	--game:GetService("Players").LocalPlayer.PlayerGui.Interface.LobbyCreate.ButtonList.Button1
	--game:GetService("Players").LocalPlayer.PlayerGui.Interface.LobbyCreate.HeaderFrame.CreateButton
	EntryScreen = plrGUI:WaitForChild("Interface"):WaitForChild("EntryScreen")
	LobbyCreate = plrGUI:WaitForChild("Interface"):WaitForChild("LobbyCreate")
	Button1 = LobbyCreate:WaitForChild("ButtonList"):WaitForChild("Button1")
	CreateButton = LobbyCreate:WaitForChild("HeaderFrame"):WaitForChild("CreateButton")
	
	ch = l.Character;
	hmn = ch:FindFirstChild("HumanoidRootPart")
	GetRoom = false
	
	for i=1,3 do
		if workspace:FindFirstChild("Teleporter"..i) and not GetRoom then
			Teleporter_Model = workspace:FindFirstChild("Teleporter"..i)
			BillboardHolder = Teleporter_Model:WaitForChild("BillboardHolder"):WaitForChild("BillboardGui"):WaitForChild("Players")
			--workspace.Teleporter1.BillboardHolder.BillboardGui.Players			
			for _,item in ipairs(Teleporter_Model:GetChildren()) do
				if BillboardHolder.Text == "0/5" and not GetRoom then
					if item:IsA("BasePart") and item.Name == "EnterPart" then
						firetouchinterest(hmn, Teleporter_Model, true)
						wait(0.3)
						firetouchinterest(hmn, Teleporter_Model, false)
					end
				end
				wait(0.2)
				if LobbyCreate.Visible == false then
					GetRoom = true
				end
			end
		end
	end
	EntryScreen.Visible = false
	firesignal(Button1.MouseButton1Click)
	wait(0.5)
	firesignal(CreateButton.MouseButton1Click)
	wait(10)
end
local function HopServer(player)
	TeleportService = game:GetService("TeleportService")
	Players = game:GetService("Players")
	Lobby_Id = tonumber(79546208627805)
	local function hopToLowPopServer()
		local success, servers = pcall(function()
			return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. Lobby_Id .. "/servers/Public?sortOrder=Asc&limit=100"))
		end)
		if not success or not servers or not servers.data then
			warn("ไม่สามารถดึงข้อมูล server ได้")
			return false
		end
		bestServer = nil
		lowestPlayerCount = math.huge
		for _, server in pairs(servers.data) do
			if server.playing < server.maxPlayers and server.playing < lowestPlayerCount and server.id ~= game.JobId then
				bestServer = server
				lowestPlayerCount = server.playing
			end
		end
		if bestServer then
			local teleportSuccess = pcall(function()
				TeleportService:TeleportToPlaceInstance(Lobby_Id, bestServer.id, player)
			end)
			return teleportSuccess
		else
			warn("ไม่พบ server ที่เหมาะสม")
			return false
		end
	end
	local function hopToEmptyServer()
		local success, servers = pcall(function()
			return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. Lobby_Id .. "/servers/Public?sortOrder=Asc&limit=100"))
		end)
		if not success or not servers or not servers.data then
			warn("ไม่สามารถดึงข้อมูล server ได้")
			return false
		end
		for _, server in pairs(servers.data) do
			if server.playing == 0 and server.id ~= game.JobId then
				local teleportSuccess = pcall(function()
					TeleportService:TeleportToPlaceInstance(Lobby_Id, server.id, player)
				end)
				return teleportSuccess
			end
		end
		warn("ไม่พบ server ว่าง กำลัง hop ไป server ที่มีคนน้อยที่สุด...")
		return hopToLowPopServer()
	end
	local function hopToServerWithPlayers(targetPlayerCount)
		local success, servers = pcall(function()
			return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. Lobby_Id .. "/servers/Public?sortOrder=Asc&limit=100"))
		end)
		if not success or not servers or not servers.data then
			warn("ไม่สามารถดึงข้อมูล server ได้")
			return false
		end
		for _, server in pairs(servers.data) do
			if server.playing == targetPlayerCount and server.id ~= game.JobId then
				local teleportSuccess = pcall(function()
					TeleportService:TeleportToPlaceInstance(Lobby_Id, server.id, player)
				end)
				return teleportSuccess
			end
		end
		warn("ไม่พบ server ที่มี " .. targetPlayerCount .. " คน")
		return false
	end
	local function hopToRandomServer()
		local success, servers = pcall(function()
			return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. Lobby_Id .. "/servers/Public?sortOrder=Asc&limit=100"))
		end)
		if not success or not servers or not servers.data then
			warn("ไม่สามารถดึงข้อมูル server ได้")
			return false
		end
		availableServers = {}
		for _, server in pairs(servers.data) do
			if server.playing < server.maxPlayers and server.id ~= game.JobId then
				table.insert(availableServers, server)
			end
		end
		if #availableServers > 0 then
			local randomServer = availableServers[math.random(1, #availableServers)]
			local teleportSuccess = pcall(function()
				TeleportService:TeleportToPlaceInstance(Lobby_Id, randomServer.id, player)
			end)
			return teleportSuccess
		else
			warn("ไม่พบ server ที่ใช้งานได้")
			return false
		end
	end
	hopToLowPopServer()
end
Joind_OldSer_Stats = 0;
if getgenv().Info_User then
	Rejoid_Old_Server = false
	if getgenv().Info_User.Uid_In_Old_Server then
		Foud_Old_Player_Count = 0
		for _,v in ipairs(getgenv().Info_User.Uid_In_Old_Server) do
			for _,v2 in ipairs(game.Players:GetChildren()) do
				if v2.UserId == v then
					Foud_Old_Player_Count = Foud_Old_Player_Count + 1
				end
			end
		end
		if Foud_Old_Player_Count > ((#game.Players:GetChildren() - 1) / 2) then
			task.spawn(function()
				Rejoid_Old_Server = true
				wait(0.5)
				HopServer(l)
				print("teleport Old Server")
				wait(10)
			end)
		end
	end
end

task.spawn(function()
	pcall(function()
		Uid_In_Server = {}
		for _,v in ipairs(game.Players:GetChildren()) do
			if v ~= l then
				table.insert(Uid_In_Server, v.UserId);
			end
		end
		Info_User = {
			Uid_In_Old_Server = Uid_In_Server
		}
		jsonData2 = HttpService:JSONEncode(Info_User)
		queue_on_teleport([[
      local HttpService = game:GetService("HttpService")
      local Uid_In_Server = ']] .. jsonData2 .. [['
      getgenv().Info_User = HttpService:JSONDecode(Uid_In_Server)
    ]])
	end)
end)

local function TextLabelSet(TextLabel_Frame, X_Posi, Text_Color, Text, Istitle)
	if Istitle then
		Istitle = UDim2.new(0.81,0,0.15,0)
	else
		Istitle = UDim2.new(0.81,0,0.1,0)
	end
	TextLabel_Frame.Size = Istitle
	TextLabel_Frame.Position = UDim2.new(0.1,0,X_Posi,0)
	TextLabel_Frame.BackgroundTransparency = 1
	TextLabel_Frame.TextScaled = true
	TextLabel_Frame.TextColor3 = Text_Color
	TextLabel_Frame.RichText = true
	TextLabel_Frame.Text = Text
	TextLabel_Frame.Font = Enum.Font.Highway
end

pcall(function()

	ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
	Dark_Frame = Instance.new("Frame", ScreenGui)

	ScreenGui.Name = string.gsub(string.char(math.random(65,90),math.random(65,90))..math.random(1000,9999),"%s","");
	ScreenGui.Enabled = true;-- เปิด / ปิด *

	Dark_Frame.Size = UDim2.new(2,0,2,0);
	Dark_Frame.Position = UDim2.new(-0.5,0,-0.5,0);
	Dark_Frame.BackgroundColor3 = Color3.new(0.0235294, 0.0235294, 0.0235294);
	Dark_Frame.BackgroundTransparency = 0.5

	Title = Instance.new("TextLabel", ScreenGui)
	TextLabelSet(Title, 0.1, Color3.new(0.501961, 0.25098, 1), "Somtank Script", true)

	Player_name = Instance.new("TextLabel", ScreenGui)
	TextLabelSet(Player_name, 0.3, Color3.new(1, 1, 1), l.DisplayName)

	Diamon_Count = Instance.new("TextLabel", ScreenGui)
	TextLabelSet(Diamon_Count, 0.5, Color3.new(1, 1, 1), "")

	Time_Farm = Instance.new("TextLabel", ScreenGui)
	TextLabelSet(Time_Farm, 0.7, Color3.new(1, 0.890196, 0.501961), "")

	task.spawn(function()
		local function formatTime(seconds)
			local hours = math.floor(seconds / 3600)
			local minutes = math.floor((seconds % 3600) / 60)
			local secs = seconds % 60
			return hours, minutes, secs
		end
		while true do
			if getgenv().Info_Script then
				if getgenv().Info_Script.Start_Farming then
					pcall(function()
						Diamon_Value = tonumber(plrGUI:WaitForChild("Interface"):WaitForChild("DiamondCount"):FindFirstChild("Count").Text)
						if Diamon_Value == 0 then
							Diamon_Value = "-"
						end
						diff = tonumber(os.time()) - tonumber(getgenv().Info_Script.Start_Farming)
						h, m, s = formatTime(diff)
						Time_Farm.Text = "⌛ "..h.." ชั่วโมง "..m.." นาที "..s.." วินาที"
						Diamon_Count.Text = "เพชรที่มี "..Diamon_Value.." 💎"
					end)
				end
			end
			wait(0.3)
		end
	end)

end)

repeat_stuc_count = 0;

repeat
	wait(0.1)
	if repeat_stuc_count < 3 then
		repeat_stuc_count = repeat_stuc_count + 0.1
	else
		wait(1)
		game:GetService("TeleportService"):Teleport(126509999114328, game.Players.LocalPlayer)
		print("teleport 1")
		wait(10)
	end
until game.Players.LocalPlayer.Character
TimeWaitLoadGame = 0;
repeat
	wait(0.1)
	TimeWaitLoadGame = TimeWaitLoadGame + 0.1
	if TimeWaitLoadGame > 3 or l:GetAttribute("HasDied") == true then
		wait(1)
		game:GetService("TeleportService"):Teleport(126509999114328)
		print("teleport 2")
		wait(10)
	end
until l.Character and l.Character:FindFirstChild("HumanoidRootPart") and l.Character:FindFirstChild("Humanoid") 

ch = l.Character;
hu = ch:FindFirstChild("Humanoid");
hmn = ch:FindFirstChild("HumanoidRootPart");
cam = workspace.CurrentCamera;

task.spawn(function()
	OutTick, LastPosition, Stuck_Count = 0, hmn.Position, 0
	while wait(1) do
		OutTick = OutTick + 1
		Dis_Pl = (LastPosition - hmn.Position).Magnitude
		if Dis_Pl < 5 then
			Stuck_Count = Stuck_Count + 1
		end
		if OutTick >= 25 or Stuck_Count > 2 or l:GetAttribute("HasDied") == true then
			wait(1)
			game:GetService("TeleportService"):Teleport(126509999114328)
			print("teleport 3")
			wait(10)
		end
		LastPosition = hmn.Position
	end
end)

local function sendWebhook(Diamon_Count)
	embed = {
		["title"] = "📊 การแจ้งเตือนเพชร",
		["description"] = 
			"**ผู้เล่น:** `" .. l.Name .. "`\n" ..
			"**เพชร:** `" .. Diamon_Count .. "💎`",
		["color"] = tonumber(0xCBA0E3),
		["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
	}
	data = {
		["username"] = "Somtank การแจ้งเตือน",
		["avatar_url"] = "https://media.discordapp.net/attachments/1367059030274609183/1412413636131033159/IconNew.jpg?ex=68b83434&is=68b6e2b4&hm=f2413ea4327ecfbb8c9357ac2f447bac0f97dc11bb1ce65e11241af520348711&=&format=webp&width=656&height=656",
		["embeds"] = {embed}
	}
	jsonData_POST = HttpService:JSONEncode(data)
	if http_request then
		http_request({
			Url = getgenv().Webhook or nil,
			Method = "POST",
			Headers = {["Content-Type"] = "application/json"},
			Body = jsonData_POST
		})
	end
end

ReplicatedStorage = game:GetService("ReplicatedStorage")
RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents")
RequestStartDraggingItem = RemoteEvents:FindFirstChild("RequestStartDraggingItem")
RequestTakeDiamonds = RemoteEvents:FindFirstChild("RequestTakeDiamonds")
StopDraggingItem = RemoteEvents:FindFirstChild("StopDraggingItem")

hu.HipHeight = 16

local function matchesAllowedKeyword(value, allowedKeywords)
	value = value:lower()
	for _, keyword in ipairs(allowedKeywords) do
		if string.find(value, keyword:lower()) then
			return true
		end
	end
	return false
end
for _,v in ipairs(workspace.Items:GetChildren()) do
	if matchesAllowedKeyword(v.Name, {"Chest"}) then
		pcall(function()
			hmn.CFrame = CFrame.new(v.PrimaryPart.Position) * CFrame.new(0,5,0)
			wait(0.07)
			fireproximityprompt(v.PrimaryPart.ProximityAttachment.ProximityInteraction)
			wait(0.07)
		end)
	end
end
for _, Model in ipairs(workspace.Items:GetChildren()) do
	if Model.Name == "Diamond" then
		pcall(function()
			if Model.PrimaryPart then
				wait(0.07)
				hmn.CFrame = Model.PrimaryPart.CFrame
				wait(0.07)
				RequestStartDraggingItem:FireServer(Model)
				wait(0.07)
				RequestTakeDiamonds:FireServer(Model)
				wait(0.07)
				StopDraggingItem:FireServer(Model)
			end
		end)
	end
end
wait(1)
game:GetService("TeleportService"):Teleport(126509999114328)
End_Diamon_Value = tonumber(plrGUI:WaitForChild("Interface"):WaitForChild("DiamondCount"):FindFirstChild("Count").Text) or 0
if getgenv().Diamon_Count_Value then
	if End_Diamon_Value > 0 and End_Diamon_Value > tonumber(getgenv().Diamon_Count_Value) then
		sendWebhook(End_Diamon_Value)
	end
end
queue_on_teleport([[getgenv().Diamon_Count_Value = ']] .. End_Diamon_Value .. [[']])
print("teleport 4")
wait(10)
